:PROPERTIES:
:ID:       pa0l48e1mjk0
:END:

#+title: Some formalization ideas for VERSEIM-2025
#+date: {{{current}}}
#+author: George McNinch

#+OPTIONS: toc:2 ':t 

#+keywords: formalization, algebra, finite-algebra

#+LATEX_CLASS: article
#+INCLUDE: "assets/macros.org" 


* Warm-up problems 
:PROPERTIES:
:CUSTOM_ID: sec:warm-up-problems-
:END:

** linear algebra results
:PROPERTIES:
:CUSTOM_ID: sec:linear-algebra-results
:END:

- formalize correspondence between linear transformations \(V \to W\)
  and matrices (where \(V\) and \(W\) are finite dimensional vector spaces
  over some field).

- e.g. formluate and prove statements about eigenvectors and
  eigenvalues of a linear endomorphism of a finite dimensional vector
  space V.

  Probably the ultimate target would be the Cayley-Hamilton theorem.

** finite group theory
:PROPERTIES:
:CUSTOM_ID: sec:finite-group-theory
:END:

- prove that a finite p-group has a non-trivial center (and hence that
  a finite p-group is solvable)

- for a finite p-group G and a field k of char p>0, prove that for any
  finite dimensional k-vector space V and any homomorphism \(\rho:G
  \to GL(V)\) that \(G\) fixes a non-zero vector in \(V\).
  
** commutative rings
:PROPERTIES:
:CUSTOM_ID: sec:commutative-rings
:END:

- prove the Gauss Lemma and Eisenstein's criteria
  [[https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Polynomial/Content.html#Polynomial.content][Gauss Lemma already has a proof in mathlib]]
  and so does [[https://leanprover-community.github.io/mathlib4_docs/Mathlib/RingTheory/Polynomial/Eisenstein/Basic.html#Polynomial.IsEisensteinAt.irreducible][Eisenstein's critera]]

** Graph theory
:PROPERTIES:
:CUSTOM_ID: sec:graph-theory
:END:

- mathlib has a proof of [[https://leanprover-community.github.io/mathlib4_docs/Mathlib/Combinatorics/Hall/Finite.html][Hall's Marriage Theorem]]
- prove elementary fact: sum of degrees of vertices is twice the
  number of edges.

  


* Formalization ideas
:PROPERTIES:
:CUSTOM_ID: sec:formalization-ideas
:END:

** [[https://en.wikipedia.org/wiki/Projective_space][Projective spaces]] and [[https://en.wikipedia.org/wiki/Grassmannian][grassmannians]]
:PROPERTIES:
:CUSTOM_ID: sec:projective-spaces-and-grassmannians
:END:

- mathlib has a formalization of [[https://leanprover-community.github.io/mathlib4_docs/Mathlib/LinearAlgebra/Projectivization/Basic.html#Projectivization][projective spaces]] can we imitate this
  formalization to the Grassmannian? What results should be proved
  about it?

  Say something about PlÃ¼cker embedding?

  Is there already a formalization of the /exterior powers/ of a vector
  space? Surely...
  

** forms over a finite field
:PROPERTIES:
:CUSTOM_ID: sec:forms-over-a-finite-field
:END:

Defined on a finite dimensional vector space \(V\) over a finite field

- reflexive forms
- quadratic forms / symmetric forms (char 2 and \(p>2\))
- alternating forms
- Hermitian forms

- Can you give a formal proof of the theorem describing the number of
  points of a quadric (i.e. the zero set in \(\mathbb{P}(V)\) of a
  non-degenerate quadratic form \(q\) on the vector space \(V\) over a
  finite field.
  
** Polar spaces
:PROPERTIES:
:CUSTOM_ID: sec:polar-spaces
:END:

- such a space is a "point-line geometry". Formalize the notion of
  point-line geometry.

- polar spaces arise from reflexive form on a vector space on a finite
  field.

** Fourier transforms for functions on vector spaces over a finite field
:PROPERTIES:
:CUSTOM_ID: sec:fourier-transforms-for-functions-on-vector-spaces-over-a-finite-field
:END:


** Algebraic combinatorics
:PROPERTIES:
:CUSTOM_ID: sec:algebraic-combinatorics
:END:

- formalize proof of some results from book of R. Stanley.

  e.g. Theorem 1.1 which gives a condition for a formal power series
  \(f \in k\llbracket t \rrbracket\) to be a /rational function./ Try
  to formalize this proof.

  or more generally, all the "tool-results" from the first section of
  Stanley's book.

** error-correcting codes
:PROPERTIES:
:CUSTOM_ID: sec:codes
:END:

- formalize some basic results about codes - see Simeon Ball's book.


** quaternion algebras
:PROPERTIES:
:CUSTOM_ID: sec:quaternion-algebras
:END:

- show they are simple

- describe in the form \((a,b)\) or (in char. 2) \((a,b]\).
  
- give criteria on \(a,b\) for when the algebra is division.

- formalize proof of result from P. Gilles book about quadratic forms
  & quaternion algebras.
